{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\nrightBack_motor_a = Motor(Ports.PORT9, GearSetting.RATIO_18_1, True)\nrightBack_motor_b = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\nrightBack = MotorGroup(rightBack_motor_a, rightBack_motor_b)\nleftBack_motor_a = Motor(Ports.PORT16, GearSetting.RATIO_18_1, False)\nleftBack_motor_b = Motor(Ports.PORT20, GearSetting.RATIO_18_1, False)\nleftBack = MotorGroup(leftBack_motor_a, leftBack_motor_b)\nrightFront = Motor(Ports.PORT21, GearSetting.RATIO_18_1, True)\nleftFront = Motor(Ports.PORT15, GearSetting.RATIO_18_1, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\nmaxVol = 11\n\nwhile(True):\n    forSpd = controller_1.axis3.position() / 100\n    curv = controller_1.axis1.position() / 100\n\n    leftSpd = forSpd + abs(forSpd) * curv\n    rightSpd = forSpd - abs(forSpd) * curv\n\n    maxSpd = max(leftSpd, rightSpd)\n\n    #normalizes output\n    if (maxSpd > 1):\n        leftSpd /= maxSpd\n        rightSpd /= maxSpd\n\n    #allow point turn\n    if forSpd == 0:\n        leftSpd = curv\n        rightSpd = -curv\n\n    print(rightSpd * maxVol, leftSpd * maxVol)\n    rightBack.spin(FORWARD, rightSpd * maxVol, VOLT)\n    rightFront.spin(FORWARD, rightSpd * maxVol, VOLT)\n    leftBack.spin(FORWARD, leftSpd * maxVol, VOLT)\n    leftFront.spin(FORWARD, leftSpd * maxVol, VOLT)\n\n    wait(20,MSEC)","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[9,10],"name":"rightBack","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[16,20],"name":"leftBack","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"false","id":"partner"},"triportSourcePort":22},{"port":[21],"name":"rightFront","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[15],"name":"leftFront","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}